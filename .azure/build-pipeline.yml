trigger:
- main

jobs:
  - job: Build
    pool:
      name: Oracle VM
    steps:
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '>=6.15.0'
        displayName: 'Install Node.js'
      - task: UseDotNet@2
        inputs:
          packageType: sdk
          version: 3.1.x
          installationPath: $(Agent.ToolsDirectory)/dotnet
        displayName: 'Use .NET Core sdk'
      - script: |
          cd counters-backend/
          npm install
          npm run build
        displayName: 'npm install and build'
      - script: |
          cd counters-frontend/
          npm test
        displayName: 'Test frontend components'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'junit.xml'
          searchFolder: '$(System.DefaultWorkingDirectory)/counters-frontend'
          failTaskOnFailedTests: true
          testRunTitle: 'jest frontend component test'
        displayName: 'Publish frontend test results'
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/counters-frontend/coverage/cobertura-coverage.xml'
          failIfCoverageEmpty: false
        displayName: 'Publish frontend test coverage'
      - script: |
          cd counters-frontend/
          npm run eslint
        displayName: 'linting'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/counters-backend'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true
        displayName: 'Archive files'
      - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        artifact: drop
        displayName: 'Upload artifact'
